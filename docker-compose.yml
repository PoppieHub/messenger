# версия синтаксиса
version: '3.8'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #Контейнер с PHP, назовём его app
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
      args:
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
    volumes:
      - ./code:/data/messenger.local
      - ./fpm/php.ini:/usr/local/etc/php/conf.d/local.ini
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network

  #контейнер с Nginx
  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    volumes:
      - ./code:/data/messenger.local

    # проброс портов
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network

  # контейнер с PhpMyAdmin
  # строим на базе стандартного образа
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_PORT=3306
    ports:
      - "81:80"
    networks:
      - app-network

  # контейнер с MySQL
  # строим на базе стандартного образа
  db:
    platform: linux/x86_64
    image: mysql:8
    container_name: db
    ports:
      - "3306:3306"
    # Интеграция Symfony с Docker
    labels:
      com.symfony.server.service-prefix: 'DATABASE'
    # описываем, какую БД мы создаём
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge